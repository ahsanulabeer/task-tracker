{"version":3,"sources":["components/Task.js","components/Tasks.js","components/Button.js","components/Header.js","components/AddTask.js","components/Footer.js","components/About.js","App.js","index.js"],"names":["Task","task","onDelete","onToggle","className","reminder","onClick","id","text","style","color","cursor","e","stopPropagation","day","Tasks","tasks","map","Button","backgroundColor","defaultProps","Header","title","onAdd","showAdd","location","useLocation","pathname","AddTask","setText","useState","setDay","setReminder","onSubmit","preventDefault","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","App","showAddTask","setShowAddTask","setTasks","useEffect","async","tasksFromServer","fetchTasks","getTasks","res","fetch","json","path","element","method","headers","body","JSON","stringify","data","length","filter","taskToToggle","fetchTask","updTask","rootElement","document","getElementById","ReactDOM","render"],"mappings":"0NA0BeA,MAvBF,IAAmC,IAAlC,KAAEC,EAAF,SAAQC,EAAR,SAAkBC,GAAe,EAC7C,OACE,sBACEC,UAAS,eAAUH,EAAKI,SAAW,WAAa,IAChDC,QAAS,KACPH,EAASF,EAAKM,KAHlB,UAME,+BACGN,EAAKO,KACN,cAAC,IAAD,CACEC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,WAC/BL,QAAUM,IACRV,EAASD,EAAKM,IACdK,EAAEC,wBAIR,4BAAIZ,EAAKa,UCHAC,MAfD,IAAoC,IAAnC,MAAEC,EAAF,SAASd,EAAT,SAAmBC,GAAe,EAC/C,OACE,mCACGa,EAAMC,KAAKhB,GACV,cAAC,EAAD,CAEEA,KAAMA,EACNC,SAAUA,EACVC,SAAUA,GAHLF,EAAKM,SCNpB,MAAMW,EAAS,IAA+B,IAA9B,MAAER,EAAF,KAASF,EAAT,QAAeF,GAAc,EAC3C,OACE,wBACEF,UAAU,MACVK,MAAO,CAAEU,gBAAiBT,GAC1BJ,QAASA,EAHX,SAKGE,KAKPU,EAAOE,aAAe,CACpBV,MAAO,aAQMQ,QCnBf,MAAMG,EAAS,IAAgC,IAA/B,MAAEC,EAAF,MAASC,EAAT,QAAgBC,GAAc,EAC5C,MAAMC,EAAWC,cAEjB,OACE,yBAAQtB,UAAU,SAAlB,UACE,6BAAKkB,IACkB,MAAtBG,EAASE,UACR,cAAC,EAAD,CACEjB,MAAOc,EAAU,MAAQ,QACzBlB,QAASiB,EACTf,KAAMgB,EAAU,QAAU,MAC1BlB,QAASiB,QAOnBF,EAAOD,aAAe,CACpBE,MAAO,gBAYMD,QCuBAO,MAxDC,IAAgB,IAAf,MAAEL,GAAY,EAC7B,MAAOf,EAAMqB,GAAWC,mBAAS,KAC1BhB,EAAKiB,GAAUD,mBAAS,KACxBzB,EAAU2B,GAAeF,oBAAS,GAgBzC,OACE,uBAAM1B,UAAU,WAAW6B,SAfXrB,IAChBA,EAAEsB,iBACG1B,GAKLe,EAAM,CAAEf,OAAMM,MAAKT,aAEnBwB,EAAQ,IACRE,EAAO,IACPC,GAAY,IARVG,MAAM,sBAYR,UACE,sBAAK/B,UAAU,eAAf,UACE,yCACA,uBACEgC,KAAK,OACLC,YAAY,WACZC,MAAO9B,EACP+B,SAAW3B,GAAMiB,EAAQjB,EAAE4B,OAAOF,YAItC,sBAAKlC,UAAU,eAAf,UACE,+CACA,uBACEgC,KAAK,OACLC,YAAY,iBACZC,MAAOxB,EACPyB,SAAW3B,GAAMmB,EAAOnB,EAAE4B,OAAOF,YAIrC,sBAAKlC,UAAU,kCAAf,UACE,iDACA,uBACEgC,KAAK,WACLK,QAASpC,EACTiC,MAAOjC,EACPkC,SAAW3B,GAAMoB,EAAYpB,EAAE8B,cAAcD,cAIjD,uBAAOL,KAAK,SAASE,MAAM,YAAYlC,UAAU,sBCzCxCuC,MATA,IAEX,mCACE,oDACA,cAAC,IAAD,CAAMC,GAAG,SAAT,sBCISC,MATD,IAEV,gCACE,+CACA,cAAC,IAAD,CAAMD,GAAG,IAAT,wBCGS,SAASE,IACtB,MAAOC,EAAaC,GAAkBlB,oBAAS,IACxCd,EAAOiC,GAAYnB,mBAAS,IAEnCoB,qBAAU,KACSC,WACf,MAAMC,QAAwBC,IAC9BJ,EAASG,IAGXE,KACC,IAGH,MAAMD,EAAaF,UACjB,MAAMI,QAAYC,MAAM,+BAGxB,aAFmBD,EAAIE,QA8DzB,OACE,cAAC,IAAD,UACE,sBAAKrD,UAAU,YAAf,UACE,cAAC,EAAD,CACEmB,MAAO,IAAMyB,GAAgBD,GAC7BvB,QAASuB,IAGX,eAAC,IAAD,WACE,cAAC,IAAD,CACEW,KAAK,IACLC,QACE,qCACGZ,GAAe,cAAC,EAAD,CAASxB,MA7DvB4B,UACd,MAAMI,QAAYC,MAAM,8BAA+B,CACrDI,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU/D,KAGjBgE,QAAaV,EAAIE,OAEvBR,EAAS,IAAIjC,EAAOiD,OAmDPjD,EAAMkD,OAAS,EACd,cAAC,EAAD,CACElD,MAAOA,EACPd,SA/CCiD,gBACXK,MAAM,+BAAD,OAAgCjD,GAAM,CAC/CqD,OAAQ,WAGVX,EAASjC,EAAMmD,QAAQlE,GAASA,EAAKM,KAAOA,MA2C5BJ,SAvCKgD,UACrB,MAAMiB,OApCUjB,WAChB,MAAMI,QAAYC,MAAM,+BAAD,OAAgCjD,IAGvD,aAFmBgD,EAAIE,QAkCIY,CAAU9D,GAC/B+D,EAAU,IAAKF,EAAc/D,UAAW+D,EAAa/D,UAErDkD,QAAYC,MAAM,+BAAD,OAAgCjD,GAAM,CAC3DqD,OAAQ,MACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUM,KAGjBL,QAAaV,EAAIE,OAEvBR,EACEjC,EAAMC,KAAKhB,GACTA,EAAKM,KAAOA,EAAK,IAAKN,EAAMI,SAAU4D,EAAK5D,UAAaJ,QA0B9C,mBAKR,cAAC,IAAD,CAAOyD,KAAK,SAASC,QAAS,cAAC,EAAD,SAEhC,cAAC,EAAD,SC9GR,MAAMY,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC7B,EAAD,MAEFyB,K","file":"static/js/main.19f84ea5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FaTimes } from \"react-icons/fa\";\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? \"reminder\" : \"\"}`}\r\n      onClick={() => {\r\n        onToggle(task.id);\r\n      }}\r\n    >\r\n      <h3>\r\n        {task.text}\r\n        <FaTimes\r\n          style={{ color: \"red\", cursor: \"pointer\" }}\r\n          onClick={(e) => {\r\n            onDelete(task.id);\r\n            e.stopPropagation();\r\n          }}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import { useState } from \"react\";\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import PropTypes from \"prop-types\";\n\nconst Button = ({ color, text, onClick }) => {\n  return (\n    <button\n      className=\"btn\"\n      style={{ backgroundColor: color }}\n      onClick={onClick}\n    >\n      {text}\n    </button>\n  );\n};\n\nButton.defaultProps = {\n  color: \"steelblue\",\n};\n\nButton.propTypes = {\n  text: PropTypes.string,\n  color: PropTypes.string,\n};\n\nexport default Button;\n","import PropTypes from \"prop-types\";\nimport Button from \"./Button\";\nimport { useLocation } from \"react-router-dom\";\n\nconst Header = ({ title, onAdd, showAdd }) => {\n  const location = useLocation();\n\n  return (\n    <header className=\"header\">\n      <h1>{title}</h1>\n      {location.pathname === \"/\" && (\n        <Button\n          color={showAdd ? \"red\" : \"green\"}\n          onClick={onAdd}\n          text={showAdd ? \"Close\" : \"Add\"}\n          onClick={onAdd}\n        />\n      )}\n    </header>\n  );\n};\n\nHeader.defaultProps = {\n  title: \"Task Tracker\",\n};\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black'\n// }\n\nexport default Header;\n","import { useState } from \"react\";\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState(\"\");\r\n  const [day, setDay] = useState(\"\");\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!text) {\r\n      alert(\"Please add a task\");\r\n      return;\r\n    }\r\n\r\n    onAdd({ text, day, reminder });\r\n\r\n    setText(\"\");\r\n    setDay(\"\");\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className=\"add-form\" onSubmit={onSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Task</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Task\"\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control\">\r\n        <label>Day & Time</label>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Add Day & Time\"\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"form-control form-control-check\">\r\n        <label>Set Reminder</label>\r\n        <input\r\n          type=\"checkbox\"\r\n          checked={reminder}\r\n          value={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n\r\n      <input type=\"submit\" value=\"Save Task\" className=\"btn btn-block\" />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to=\"/about\">About</Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from \"react-router-dom\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to=\"/\">Go Back</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import { React, useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport \"./index.css\";\nimport Tasks from \"./components/Tasks\";\nimport Header from \"./components/Header\";\nimport AddTask from \"./components/AddTask\";\nimport Footer from \"./components/Footer\";\nimport About from \"./components/About\";\n\nexport default function App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []);\n\n  // Fetch Tasks\n  const fetchTasks = async () => {\n    const res = await fetch(\"http://localhost:5000/tasks\");\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Fetch Task (a single task)\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n\n    return data;\n  };\n\n  // Add Task\n  const addTask = async (task) => {\n    const res = await fetch(\"http://localhost:5000/tasks\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(task),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n    // const id = Math.floor(Math.random() * 10000) + 1;\n\n    // const newTask = { id, ...task };\n    // setTasks([...tasks, newTask]);\n  };\n  // Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"DELETE\",\n    });\n\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  // Toggle Reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: \"PUT\",\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n      body: JSON.stringify(updTask),\n    });\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <Router>\n      <div className=\"container\">\n        <Header\n          onAdd={() => setShowAddTask(!showAddTask)}\n          showAdd={showAddTask}\n        />\n\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <>\n                {showAddTask && <AddTask onAdd={addTask} />}\n                {tasks.length > 0 ? (\n                  <Tasks\n                    tasks={tasks}\n                    onDelete={deleteTask}\n                    onToggle={toggleReminder}\n                  />\n                ) : (\n                  \"Add a Task!\"\n                )}\n              </>\n            }\n          />\n          <Route path=\"/about\" element={<About />} />\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}